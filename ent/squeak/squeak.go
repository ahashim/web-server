// Code generated by ent, DO NOT EDIT.

package squeak

const (
	// Label holds the string label denoting the squeak type in the database.
	Label = "squeak"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBlockNumber holds the string denoting the block_number field in the database.
	FieldBlockNumber = "block_number"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// EdgeAuthor holds the string denoting the author edge name in mutations.
	EdgeAuthor = "author"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the squeak in the database.
	Table = "squeaks"
	// AuthorTable is the table that holds the author relation/edge.
	AuthorTable = "squeaks"
	// AuthorInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AuthorInverseTable = "users"
	// AuthorColumn is the table column denoting the author relation/edge.
	AuthorColumn = "user_authored"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "squeaks"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_owned"
)

// Columns holds all SQL columns for squeak fields.
var Columns = []string{
	FieldID,
	FieldBlockNumber,
	FieldContent,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "squeaks"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_authored",
	"user_owned",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ContentValidator is a validator for the "content" field. It is called by the builders before save.
	ContentValidator func(string) error
)
